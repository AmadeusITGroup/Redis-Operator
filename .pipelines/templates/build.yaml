# build and test

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    make build
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

  - task: Docker@2
  displayName: Login to ACR
  inputs: 
    command: login
    containerRegistry: $(DockerRegistryConnectionID)

- script: |
    echo "##vso[task.setvariable variable=tag]$BUILD_SOURCEBRANCHNAME"
  displayName: 'Extract tag'

- task: Docker@2
  displayName: Build and push docker image
  inputs: 
    command: buildAndPush
    dockerfile: '$(modulePath)/docker/operator/Dockerfile'
    repository: $(OperatorDockerRepository)
    tags: |
      $(tag)
- script: |
    ESCAPED_REPO=${OPERATORDOCKERREPOSITORY/\//\\/}
    IMAGEID=$(docker image ls --filter label=com.visualstudio.msasg.image.build.repository.uri=$BUILD_REPOSITORY_URI --filter label=com.visualstudio.msasg.image.build.sourceversion=$BUILD_SOURCEVERSION --filter label=com.visualstudio.msasg.image.build.definitionname=$SYSTEM_DEFINITIONNAME --filter label=com.visualstudio.msasg.image.build.buildnumber=$BUILD_BUILDNUMBER --format "{{ .ID }}")
    echo "found image ID $IMAGEID"
    DIGESTS=$(docker inspect $IMAGEID --format="{{ index .RepoDigests 0 }}")
    DIGESTS=$(echo $DIGESTS | sed "s/^.*$ESCAPED_REPO/$ESCAPED_REPO/")
    echo "found image digests $DIGESTS"
    TAGS=$(docker inspect $IMAGEID --format="{{ index .RepoTags 0 }}")
    TAGS=$(echo $TAGS | sed "s/^.*$ESCAPED_REPO/$ESCAPED_REPO/")
    echo "found image tags $TAGS"
    echo "##vso[task.setvariable variable=imageDigests]$DIGESTS"
    echo "##vso[task.setvariable variable=imageTags]$TAGS"
  displayName: 'Extract image information'

- task: Docker@2
  displayName: Logout from ACR
  inputs: 
    command: logout
    containerRegistry: $(DockerRegistryConnectionID)
